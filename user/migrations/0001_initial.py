# Generated by Django 4.0.2 on 2022-03-06 17:04

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mdeditor.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telephone', models.CharField(default='16639821093', max_length=11, unique=True, verbose_name='电话')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户表',
                'verbose_name_plural': '用户表',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AboutAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='smallMQ', max_length=32, verbose_name='昵称')),
                ('personal_signature', models.CharField(default='爱屋及乌', max_length=128, verbose_name='个性签名')),
                ('email', models.CharField(default='2271443486@qq.com', max_length=32, verbose_name='邮箱')),
                ('we_chat', models.CharField(default='16639821093', max_length=32, verbose_name='微信')),
                ('telephone', models.CharField(default='16639821093', max_length=11, verbose_name='电话')),
                ('age', models.CharField(default='21', max_length=8, verbose_name='年龄')),
                ('expect_job', models.CharField(max_length=32, null=True, verbose_name='求职岗位')),
                ('expect_salary', models.CharField(max_length=8, null=True, verbose_name='期望薪水')),
                ('graduation_school', models.CharField(default='河南农业大学', max_length=32, verbose_name='毕业院校')),
                ('graduation_time', models.CharField(default='2023', max_length=128, verbose_name='毕业时间')),
                ('certificate', models.CharField(max_length=128, null=True, verbose_name='证书')),
                ('simple_experience', models.TextField(null=True, verbose_name='工作经验简历')),
                ('avator', models.ImageField(null=True, upload_to='avator', verbose_name='头像')),
            ],
            options={
                'verbose_name': '关于作者',
                'verbose_name_plural': '关于作者',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True, verbose_name='留言时间')),
                ('content', models.CharField(max_length=256, verbose_name='留言内容')),
                ('user', models.CharField(max_length=32, verbose_name='留言人名字')),
            ],
            options={
                'verbose_name': '留言',
                'verbose_name_plural': '留言',
            },
        ),
        migrations.CreateModel(
            name='Music',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='歌曲名字')),
                ('artist', models.CharField(max_length=32, verbose_name='歌手')),
                ('url', models.URLField(max_length=400, verbose_name='歌曲链接')),
                ('cover', models.URLField(max_length=400, null=True, verbose_name='图片链接')),
                ('lrc', models.TextField(null=True, verbose_name='歌词')),
            ],
            options={
                'verbose_name': '音乐',
                'verbose_name_plural': '音乐',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, null=True, verbose_name='分类表')),
            ],
            options={
                'verbose_name': '分类',
                'verbose_name_plural': '分类',
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True, verbose_name='访问时间')),
                ('today_num', models.IntegerField(default=0, verbose_name='今日访问量')),
                ('total_num', models.IntegerField(default=0, verbose_name='今日访问量')),
            ],
            options={
                'verbose_name': '访问信息',
                'verbose_name_plural': '访问信息',
            },
        ),
        migrations.CreateModel(
            name='JobExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=32, null=True, verbose_name='公司名称')),
                ('job_name', models.CharField(max_length=32, null=True, verbose_name='职位名称')),
                ('job_time', models.CharField(max_length=32, null=True, verbose_name='在职时间')),
                ('salary', models.CharField(max_length=32, null=True, verbose_name='薪水')),
                ('job_content', models.TextField(null=True, verbose_name='工作内容')),
                ('job_author', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.aboutauthor', verbose_name='作者')),
            ],
            options={
                'verbose_name': '工作经历',
                'verbose_name_plural': '工作经历',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(max_length=64, null=True, verbose_name='题目')),
                ('simple_introduction', models.CharField(max_length=128, null=True, verbose_name='简介')),
                ('content', mdeditor.fields.MDTextField(null=True, verbose_name='内容')),
                ('create_time', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('view_number', models.IntegerField(default=0, verbose_name='访问量')),
                ('photo', models.ImageField(null=True, upload_to='blog_photo', verbose_name='图片')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='作者名字')),
                ('tag', models.ManyToManyField(to='user.Tags', verbose_name='分类')),
            ],
            options={
                'verbose_name': '博客',
                'verbose_name_plural': '博客',
            },
        ),
    ]
